! --relabel=shuffle -I8
        module points
           type :: point
              real :: x,y
           end type point
           interface
              real module function point_dist(a,b)
                 type(point), intent(in) :: a,b
              end function point_dist
           end interface
           interface inter
              module procedure fun
           end interface
        contains
           real function fun(x)
              real x
              fun = a+10
           end
        end module

        submodule (points) points_a
        contains
           subroutine x
              goto 1
1             continue
           end subroutine

           module procedure point_dist
              continue
              goto 10
10            continue
              write(*,*) "hoppa"
              point_dist = sqrt((a%x-b%x)**2+(a%y-b%y)**2)
           end procedure
        end submodule


        subroutine mysub(*,i,k,*,*)
           return 1
        end
        subroutine mysubomp
!$         do 10 i=1,20
!$            do 10 j=1,10
!$               continue
!$ 10      continue
        end subroutine

        subroutine mysub1
1          continue
        end

        subroutine mysub2(i)
           return
        end

        function myfun(x,i)
           goto (50,30,10) i
#ifdef xyz
50         myfun = 10*x; goto 20
#endif
30         myfun = 20*x; goto 20
10         myfun = 30*x; goto 20
#ifndef xyz
50         myfun = 20*x; goto 20
#endif

20      end function myfun


        program p
           integer jf(2)
           jf(1) = 10
31         continue ;93 x=&
              y+10 ;115 continue ; z = 123 + &
              12345
1000       continue;3010 continue ;95 continue
           do 112 i=1,20; do 111 j=1,20 ; do 92 k=0,4
                    x = x+1
92               continue
111           continue;112 continue
           do 3 i=1,3
              do 3, j=1,4
                 do 3 k=1,2
3          l=l+i+j+k

           do 2010    i=1,3;;x=y;2010 continue
           do 9, i=1,2
              continue
9          continue
           do 3030
              exit
3030       continue
           do 961 while(i .eq. i+1)
              l = l+10
961        continue
           do 511  , while(j .eq. j+1)
              do 1001, while(j .eq. j+1)
1001          continue;511      continue

           goto 1200; if (0.eq.1) goto 130
1200       continue
130        continue

           if(x) 3020,1,11 ;2 goto 1; goto 3020 ;12345 goto 11
           if(x) 3020,&
! comment
              1,&    !comment
              11 ;8 goto 1; goto 3020 ;5 goto 11

#if 0
           if(l) 3020,1
#endif
           continue
3020       continue
1          continue
11         continue

           goto( 3020, 1,&
!   comment
              11, 96) 4
           if(x.eq.2)goto( 3020, 1,&
!   comment
              11, 130),i ; goto 96 ; goto 2020
           assign 96 to ixyz
           goto ixyz (3020,1,11,96)
           if(0 .eq. x)goto ixyz, (3020,1,&
!  comment
              11,2020); goto 1102
51         format(3i5)
96         read 51
           read 51,i,j,k
           if(1.eq.0)read 51,i,j,k
2020       print 51
           if(1.eq.0) print 51
           print 51,i,&
              j,k;goto 1102
           if(1.eq.0)  print 51,i,&
              j,k;goto 1102
           close (10)
           endfile 10
           read '(i5)', i
           if(1.eq.0)read '(i5)', i
           read 120,i,j,k
           if(1.eq.0)read        120,i,j,k
           close(10,err=1102)
           if(1.eq.0)close(10,err=1102)
           open(10,err=1102)
           if(1.eq.0)open(10,err=1102)
           close(jf(1),err=1102)
           if(1.eq.0)close(jf(1),err=1102)
           endfile(9,err=1102)
           if(1.eq.0)endfile(9,err=1102)
           rewind(9,err=1102)
           if(1.eq.0)rewind(9,err=1102)
           flush(9,err=1102)
           if(1.eq.0)flush(9,err=1102)
           backspace(9,err=1102)
           inquire(9,err=1102)
           wait(9,err=1102)
           wait(9,end=1102)
           wait(9,eor=1102)
           write(jf(i),120)
           read(*,'(a80)')
           read(*,fmt="(a80)")
           read(5,120,err=1102,iostat=i,eor=1102,advance='no',end=1102)
           if(1.eq.0)backspace(9,err=1102);   if(1.eq.0)inquire(9,err=1102);if(1.eq.0)wait(9,err=1102)
           if(1.eq.0)wait(9,end=1102)
           if(1.eq.0)wait(9,eor=1102)
           if(1.eq.0)write(jf(i),120)
           if(1.eq.0)read(*,'(a80)')
           if(1.eq.0)read(*,fmt="(a80)")
           if(1.eq.0)read(5,120,err=1102,iostat=i,eor=1102,advance='no',end=1102)
           read(5,err=1102,fmt='(3i3)',&
              end=1102) i,j,k
           write(6,120) i,j,k
           write(*,120) x
           write(6,fmt=120)i,j,k
           if(i.eq.0)read(5,err=1102,fmt='(3i3)',&
              end=1102) i,j,k
           if(i.eq.0)write(6,120) i,j,k
           if(i.eq.0)write(*,120) x
           if(i.eq.0)write(6,fmt=120)i,j,k
1102       continue
120        format(3i5)
           call mysub(*91,ixyz,j,*1101,*951)
           if(1.eq.3) &
              call mysub(*91,ixyz,j,*1101,*951)
           call mysub1
           call mysub1()
           call mysub2(klm)
           call mysub(*91,3*400,3**4,*1101,*951)
           call mysub(*91,ij*400,3**ij,*1101,*951)
           call mysub(*91,ij*klm,3**4,*1101,*951)
           if(1.eq.0)call mysub1
           if(1.eq.0)call mysub1()
           if(1.eq.0)call mysub2(klm)
           if(1.eq.0)call mysub(*91,3*400,3**4,*1101,*951)
           if(1.eq.0)call mysub(*91,ij*400,3**ij,*1101,*951)
           if(1.eq.0)call mysub(*91,ij*klm,3**4,*1101,*951)

91         continue
1101       continue
951        continue
        contains
           real function f(x)
1             continue
              f = 10*x
           end function f
           subroutine subf
1             continue
           end subroutine subf
        end

#if 0
        subroutine subx
           ! test all according to the man page
110        ...         ! statement or format label
           IF(...) 103,105,100
           IF(...) 103,105
           DO 99 I=X,...
99         continue
           DO 104, I=X,...
104        continue
           DO 102 WHILE(...)
102        continue
           DO 101, WHILE(...)
101        continue
           DO 130
130        continue
           ACCEPT 120...
           ASSIGN 120 TO I
           BACKSPACE(...,ERR=120,...)
           CALL I(...,*120,...,&103,...,$105)
           CLOSE(...,ERR=120,...)
           DECODE(...,120,...,ERR=103,...)
           DELETE(...,ERR=103,...)
           ENCODE(...,120,...,ERR=103,...)
           ENDFILE(...,ERR=120,...)
           FIND(...,ERR=103,...)
           FLUSH(...,ERR=120,...)
           GOTO 120
           GOTO I(120,103,105)
           GOTO I,(120,103,105)
           GOTO(120,103,105)...
           INQUIRE(...,ERR=120,...)
           OPEN(...,ERR=120,...)
           PRINT 120...
           READ 120...
           READ(...,120,...)
           READ(...,ERR=120,...,END=103,EOR=105,...,FMT=100)...
           REREAD 120...
           REREAD(...,120,...)
           REREAD(...,ERR=120,...,END=103,EOR=105,...,FMT=100)...
           REWIND(...,ERR=120,...)
           REWRITE(...,120) ...
           REWRITE(...,ERR=120,...,FMT=103,...,EOR=105)...
           TYPE 120...
           WAIT(...,ERR=120,...,END=103,...,EOR=105,...)
           WRITE(...,120) ...
           WRITE(...,ERR=120,...,FMT=103,...,EOR=105)...
120        continue;103 continue;105 continue;100 continue

        end subroutine subx

        subroutine subx1
           if(...)  ACCEPT 120...
           if(...)  ASSIGN 120 TO I
           if(...)  BACKSPACE(...,ERR=120,...)
           if(...)  CALL I(...,*120,...,&130,...,$100)
           if(...)  CLOSE(...,ERR=120,...)
           if(...)  DECODE(...,120,...,ERR=130,...)
           if(...)  DELETE(...,ERR=130,...)
           if(...)  ENCODE(...,120,...,ERR=130,...)
           if(...)  ENDFILE(...,ERR=120,...)
           if(...)  FIND(...,ERR=130,...)
           if(...)  FLUSH(...,ERR=120,...)
           if(...)  GOTO 120
           if(...)  GOTO I(120,130,100)
           if(...)  GOTO I,(120,130,100)
           if(...)  GOTO(120,130,100)...
           if(...)  INQUIRE(...,ERR=120,...)
           if(...)  OPEN(...,ERR=120,...)
           if(...)  PRINT 120...
           if(...)  READ 120...
           if(...)  READ(...,120,...)
           if(...)  READ(...,ERR=120,...,END=130,EOR=100,...,FMT=110)...
           if(...)  REREAD 120...
           if(...)  REREAD(...,120,...)
           if(...)  REREAD(...,ERR=120,...,END=130,EOR=100,...,FMT=110)...
           if(...)  REWIND(...,ERR=120,...)
           if(...)  REWRITE(...,120) ...
           if(...)  REWRITE(...,ERR=120,...,FMT=130,...,EOR=100)...
           if(...)  TYPE 120...
           if(...)  WAIT(...,ERR=120,...,END=130,...,EOR=100,...)
           if(...)  WRITE(...,120) ...
           if(...)  WRITE(...,ERR=120,...,FMT=130,...,EOR=100)...

120        continue;130 continue;100 continue;110 continue
        end subroutine

        subroutine suby
           ! same as subx, but now with omp sentinel
!$ 101     ...         ! statement or format label
!$         IF(...) 103,130,99
!$         IF(...) 103,130
!$         DO 120 I=X,...
!$ 120     continue
!$         DO 105, I=X,...
!$ 105     continue
!$         DO 100 WHILE(...)
!$ 100     continue
!$         DO 102, WHILE(...)
!$ 102     continue
!$         DO 110
!$ 110     continue
!$         ACCEPT 104...
!$         ASSIGN 104 TO I
!$         BACKSPACE(...,ERR=104,...)
!$         CALL I(...,*104,...,&103,...,$130)
!$         CLOSE(...,ERR=104,...)
!$         DECODE(...,104,...,ERR=103,...)
!$         DELETE(...,ERR=103,...)
!$         ENCODE(...,104,...,ERR=103,...)
!$         ENDFILE(...,ERR=104,...)
!$         FIND(...,ERR=103,...)
!$         FLUSH(...,ERR=104,...)
!$         GOTO 104
!$         GOTO I(104,103,130)
!$         GOTO I,(104,103,130)
!$         GOTO(104,103,130)...
!$         INQUIRE(...,ERR=104,...)
!$         OPEN(...,ERR=104,...)
!$         PRINT 104...
!$         READ 104...
!$         READ(...,104,...)
!$         READ(...,ERR=104,...,END=103,EOR=130,...,FMT=99)...
!$         REREAD 104...
!$         REREAD(...,104,...)
!$         REREAD(...,ERR=104,...,END=103,EOR=130,...,FMT=99)...
!$         REWIND(...,ERR=104,...)
!$         REWRITE(...,104) ...
!$         REWRITE(...,ERR=104,...,FMT=103,...,EOR=130)...
!$         TYPE 104...
!$         WAIT(...,ERR=104,...,END=103,...,EOR=130,...)
!$         WRITE(...,104) ...
!$         WRITE(...,ERR=104,...,FMT=103,...,EOR=130)...
!$ 104     continue; 103 continue; 130 continue; 99 continue
        end subroutine suby

        subroutine suby1
!$ 
!$         if(...)  ACCEPT 130...
!$         if(...)  ASSIGN 130 TO I
!$         if(...)  BACKSPACE(...,ERR=130,...)
!$         if(...)  CALL I(...,*130,...,&110,...,$100)
!$         if(...)  CLOSE(...,ERR=130,...)
!$         if(...)  DECODE(...,130,...,ERR=110,...)
!$         if(...)  DELETE(...,ERR=110,...)
!$         if(...)  ENCODE(...,130,...,ERR=110,...)
!$         if(...)  ENDFILE(...,ERR=130,...)
!$         if(...)  FIND(...,ERR=110,...)
!$         if(...)  FLUSH(...,ERR=130,...)
!$         if(...)  GOTO 130
!$         if(...)  GOTO I(130,110,100)
!$         if(...)  GOTO I,(130,110,100)
!$         if(...)  GOTO(130,110,100)...
!$         if(...)  INQUIRE(...,ERR=130,...)
!$         if(...)  OPEN(...,ERR=130,...)
!$         if(...)  PRINT 130...
!$         if(...)  READ 130...
!$         if(...)  READ(...,130,...)
!$         if(...)  READ(...,ERR=130,...,END=110,EOR=100,...,FMT=120)...
!$         if(...)  REREAD 130...
!$         if(...)  REREAD(...,130,...)
!$         if(...)  REREAD(...,ERR=130,...,END=110,EOR=100,...,FMT=120)...
!$         if(...)  REWIND(...,ERR=130,...)
!$         if(...)  REWRITE(...,130) ...
!$         if(...)  REWRITE(...,ERR=130,...,FMT=110,...,EOR=100)...
!$         if(...)  TYPE 130...
!$         if(...)  WAIT(...,ERR=130,...,END=110,...,EOR=100,...)
!$         if(...)  WRITE(...,130) ...
!$         if(...)  WRITE(...,ERR=130,...,FMT=110,...,EOR=100)...
!$ 
!$ 130     continue; 110 continue; 100 continue; 120 continue
        end subroutine


#endif

        subroutine old_dec
#if 0
           integer buf(20)
           type 40,x,y,z
           read(5'1000,err=50) x
           read(abc '1000,err=50) x
           read(5#1000,err=50) x
           read(5#n,err=50) x
           read(5#n,40,err=50) x
           write(5#1000,err=50) x
           write(5#n,err=50) x
           call sub(&30,$50,*50)
           type *,x,y,z
           type 40
           type *
           accept 10,x
           accept 10
           accept *,x
           encode(80,20,buf,x,y,z,err=50)
           decode(80,60,buf,x,y,z,err=30)
40         format(3f10.4)
10         format(f10.6)
20         format(3f20.10)
60         format(3f20.6)
50         continue
30         continue
#endif
        end

        subroutine abc
           ! no relabel possible, because of intervening preprocessor statement
           goto i,(20,4321&
#ifdef trala
              ,20)
#else
           ,145,20)
#endif
10000      x=1
20         x=1
4321       x=1
4322       x=1
145        x=2
           assign 10000 to i

        end subroutine
        subroutine xyz
           ! no relabel possible, because of intervening preprocessor statement in previous subroutine
1          continue

        end subroutine
